---

name: CI
on:
  schedule:
    - cron: '0 1 * * *'
  pull_request:
  push:
    branches:
      - main
      - release
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: lint
        uses: reviewdog/action-eslint@v1
        with:
          eslint_flags: 'test/ lib/ presets/ index.js'
  ci:
    strategy:
      matrix:
        node-version:
          - '12.x'
          - '14.x'
        os:
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ matrix.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.node-version }}-yarn-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install --frozen-lockfile
      - run: yarn test
      - run: yarn semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ github.token }}
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release') && matrix.os == 'ubuntu-latest' && matrix.node-version == '14.x'
  approve-renovate:
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'pull_request'
    steps:
      - name: dump payload
        run: |
          jq . ${{ github.event_path }}
      - uses: actions/github-script@v3
        with:
          script: |
            if (context.payload.pull_request.user.login !== 'renovate[bot]') {
              console.log(`not from renovate`);
              return;
            }
            await github.pulls.createReview({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.number,
              event: 'APPROVE',
            })
  create-release-pull-request:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: release
      - run: |
          git fetch origin main:main
          git reset --hard main
      - name: create release pull request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ github.token }}
          title: Next stable release candidate
          base: release
